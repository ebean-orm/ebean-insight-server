-- apply changes
create schema if not exists ebean_insight;

create table ebean_insight.app (
  id                            integer generated by default as identity not null,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  name                          varchar(200) not null,
  constraint pk_app primary key (id)
);

create table ebean_insight.app_db (
  id                            integer generated by default as identity not null,
  app_id                        integer not null,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  name                          varchar(200) not null,
  constraint pk_app_db primary key (id)
);

create table ebean_insight.app_metric (
  id                            integer generated by default as identity (start with 1000) not null,
  app_id                        integer,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  key                           varchar(40) not null,
  name                          varchar(300),
  rollup_group                  varchar(300),
  loc                           varchar(300),
  sql                           text,
  constraint pk_app_metric primary key (id)
);

create table ebean_insight.app_pod (
  id                            integer generated by default as identity not null,
  app_id                        integer not null,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  name                          varchar(200) not null,
  constraint pk_app_pod primary key (id)
);

create table ebean_insight.env (
  id                            integer generated by default as identity not null,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  name                          varchar(50) not null,
  constraint pk_env primary key (id)
);

create table ebean_insight.gauge_entry (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  pod_id                        integer,
  value                         decimal(18,3) not null
) partition by range (event_time);

create table ebean_insight.gauge_entry_default partition of ebean_insight.gauge_entry default;

create table ebean_insight.gauge_d1 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  count                         bigint not null,
  total                         decimal(18,3) not null,
  max                           decimal(18,3) not null,
  mean                          decimal(18,3) not null
) partition by range (event_time);

create table ebean_insight.gauge_d1_default partition of ebean_insight.gauge_d1 default;

create table ebean_insight.gauge_m1 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  count                         bigint not null,
  total                         decimal(18,3) not null,
  max                           decimal(18,3) not null,
  mean                          decimal(18,3) not null
) partition by range (event_time);

create table ebean_insight.gauge_m1_default partition of ebean_insight.gauge_m1 default;

create table ebean_insight.gauge_m10 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  count                         bigint not null,
  total                         decimal(18,3) not null,
  max                           decimal(18,3) not null,
  mean                          decimal(18,3) not null
) partition by range (event_time);

create table ebean_insight.gauge_m10_default partition of ebean_insight.gauge_m10 default;

create table ebean_insight.gauge_m60 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  count                         bigint not null,
  total                         decimal(18,3) not null,
  max                           decimal(18,3) not null,
  mean                          decimal(18,3) not null
) partition by range (event_time);

create table ebean_insight.gauge_m60_default partition of ebean_insight.gauge_m60 default;

create table ebean_insight.job (
  when_expire                   timestamptz not null,
  version                       bigint not null,
  id                            varchar(50) not null,
  owner                         varchar(50) not null,
  constraint pk_job primary key (id)
);

create table ebean_insight.query_plan (
  id                            integer generated by default as identity not null,
  metric_id                     integer,
  env_id                        integer not null,
  app_id                        integer not null,
  query_time_micros             bigint not null,
  capture_count                 bigint not null,
  capture_micros                bigint not null,
  when_captured                 timestamptz,
  version                       integer not null,
  when_created                  timestamptz not null,
  when_modified                 timestamptz not null,
  hash                          varchar,
  label                         varchar,
  sql                           varchar,
  bind                          varchar,
  plan                          varchar,
  constraint pk_query_plan primary key (id)
);

create table ebean_insight.rollup_job (
  event_time                    timestamptz not null,
  execution_time                bigint not null,
  rollup_count                  bigint not null,
  when_modified                 timestamptz not null
);

create table ebean_insight.timed_entry (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  db_id                         integer,
  count                         bigint,
  mean                          bigint,
  max                           bigint,
  total                         bigint,
  pod_id                        integer
) partition by range (event_time);

create table ebean_insight.timed_entry_default partition of ebean_insight.timed_entry default;

create table ebean_insight.timed_d1 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  db_id                         integer,
  count                         bigint,
  mean                          bigint,
  max                           bigint,
  total                         bigint
) partition by range (event_time);

create table ebean_insight.timed_d1_default partition of ebean_insight.timed_d1 default;

create table ebean_insight.timed_m1 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  db_id                         integer,
  count                         bigint,
  mean                          bigint,
  max                           bigint,
  total                         bigint
) partition by range (event_time);

create table ebean_insight.timed_m1_default partition of ebean_insight.timed_m1 default;

create table ebean_insight.timed_m10 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  db_id                         integer,
  count                         bigint,
  mean                          bigint,
  max                           bigint,
  total                         bigint
) partition by range (event_time);

create table ebean_insight.timed_m10_default partition of ebean_insight.timed_m10 default;

create table ebean_insight.timed_m60 (
  event_time                    timestamptz not null,
  metric_id                     integer not null,
  env_id                        integer not null,
  app_id                        integer not null,
  db_id                         integer,
  count                         bigint,
  mean                          bigint,
  max                           bigint,
  total                         bigint
) partition by range (event_time);

create table ebean_insight.timed_m60_default partition of ebean_insight.timed_m60 default;

-- foreign keys and indices
create index ix_app_db_app_id on ebean_insight.app_db (app_id);
alter table ebean_insight.app_db add constraint fk_app_db_app_id foreign key (app_id) references ebean_insight.app (id) on delete restrict on update restrict;

create index ix_app_pod_app_id on ebean_insight.app_pod (app_id);
alter table ebean_insight.app_pod add constraint fk_app_pod_app_id foreign key (app_id) references ebean_insight.app (id) on delete restrict on update restrict;

create index if not exists ix_app_metric_key on ebean_insight.app_metric (key);
create index if not exists ix_app_metric_name on ebean_insight.app_metric (name);
create index if not exists ix_gauge_entry_event_time on ebean_insight.gauge_entry (event_time);
create index if not exists ix_gauge_d1_app_id on ebean_insight.gauge_d1 (app_id);
create index if not exists ix_gauge_d1_env_id on ebean_insight.gauge_d1 (env_id);
create index if not exists ix_gauge_d1_metric_id on ebean_insight.gauge_d1 (metric_id);
create index if not exists ix_gauge_d1_event_time on ebean_insight.gauge_d1 (event_time);
create index if not exists ix_gauge_m1_event_time on ebean_insight.gauge_m1 (event_time);
create index if not exists ix_gauge_m10_app_id on ebean_insight.gauge_m10 (app_id);
create index if not exists ix_gauge_m10_env_id on ebean_insight.gauge_m10 (env_id);
create index if not exists ix_gauge_m10_metric_id on ebean_insight.gauge_m10 (metric_id);
create index if not exists ix_gauge_m10_event_time on ebean_insight.gauge_m10 (event_time);
create index if not exists ix_gauge_m60_app_id on ebean_insight.gauge_m60 (app_id);
create index if not exists ix_gauge_m60_env_id on ebean_insight.gauge_m60 (env_id);
create index if not exists ix_gauge_m60_metric_id on ebean_insight.gauge_m60 (metric_id);
create index if not exists ix_gauge_m60_event_time on ebean_insight.gauge_m60 (event_time);
create index if not exists ix_rollup_job_event_time on ebean_insight.rollup_job (event_time);
create index if not exists ix_timed_entry_event_time on ebean_insight.timed_entry (event_time);
create index if not exists ix_timed_d1_app_id on ebean_insight.timed_d1 (app_id);
create index if not exists ix_timed_d1_env_id on ebean_insight.timed_d1 (env_id);
create index if not exists ix_timed_d1_metric_id on ebean_insight.timed_d1 (metric_id);
create index if not exists ix_timed_d1_event_time on ebean_insight.timed_d1 (event_time);
create index if not exists ix_timed_m1_event_time on ebean_insight.timed_m1 (event_time);
create index if not exists ix_timed_m10_app_id on ebean_insight.timed_m10 (app_id);
create index if not exists ix_timed_m10_env_id on ebean_insight.timed_m10 (env_id);
create index if not exists ix_timed_m10_metric_id on ebean_insight.timed_m10 (metric_id);
create index if not exists ix_timed_m10_event_time on ebean_insight.timed_m10 (event_time);
create index if not exists ix_timed_m60_app_id on ebean_insight.timed_m60 (app_id);
create index if not exists ix_timed_m60_env_id on ebean_insight.timed_m60 (env_id);
create index if not exists ix_timed_m60_metric_id on ebean_insight.timed_m60 (metric_id);
create index if not exists ix_timed_m60_event_time on ebean_insight.timed_m60 (event_time);
